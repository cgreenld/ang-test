{"ast":null,"code":"import { SalesTaxService } from './sales-tax.service';\nimport { TaxRateService } from './tax-rate.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./sales-tax.service\";\nimport * as i2 from \"@angular/common\";\nfunction SalesTaxComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"currency\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    const _r0 = i0.ɵɵreference(8);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"The sales tax is \", i0.ɵɵpipeBind4(3, 1, ctx_r1.getTax(_r0.value), \"USD\", true, \"1.2-2\"), \"\");\n  }\n}\nexport class SalesTaxComponent {\n  constructor(salesTaxService) {\n    this.salesTaxService = salesTaxService;\n  }\n  getTax(value) {\n    return this.salesTaxService.getVAT(value);\n  }\n}\nSalesTaxComponent.ɵfac = function SalesTaxComponent_Factory(t) {\n  return new (t || SalesTaxComponent)(i0.ɵɵdirectiveInject(i1.SalesTaxService));\n};\nSalesTaxComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SalesTaxComponent,\n  selectors: [[\"app-sales-tax\"]],\n  features: [i0.ɵɵProvidersFeature([SalesTaxService, TaxRateService])],\n  decls: 10,\n  vars: 1,\n  consts: [[\"for\", \"amount-input\"], [\"type\", \"text\", \"id\", \"amount-input\", 3, \"change\"], [\"amountBox\", \"\"], [4, \"ngIf\"]],\n  template: function SalesTaxComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h2\");\n      i0.ɵɵtext(1, \"Sales Tax Calculator\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"p\")(3, \"em\");\n      i0.ɵɵtext(4, \"Enter a number and press enter to calculate tax.\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(5, \"label\", 0);\n      i0.ɵɵtext(6, \"Amount: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"input\", 1, 2);\n      i0.ɵɵlistener(\"change\", function SalesTaxComponent_Template_input_change_7_listener() {\n        return 0;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(9, SalesTaxComponent_div_9_Template, 4, 6, \"div\", 3);\n    }\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(8);\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"ngIf\", _r0.value);\n    }\n  },\n  dependencies: [i2.NgIf, i2.CurrencyPipe],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"AAEA,SAASA,eAAe,QAAQ,qBAAqB;AACrD,SAASC,cAAc,QAAQ,oBAAoB;;;;;;IAS/CC,2BAA6B;IAC1BA,YACyD;;IAAAA,iBAAI;;;;;IAD7DA,eACyD;IADzDA,oHACyD;;;AAKhE,OAAM,MAAOC,iBAAiB;EAC5BC,YAAoBC,eAAgC;IAAhC,oBAAe,GAAfA,eAAe;EAAqB;EAExDC,MAAM,CAACC,KAAsB;IAC3B,OAAO,IAAI,CAACF,eAAe,CAACG,MAAM,CAACD,KAAK,CAAC;EAC3C;;AALWJ,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;QAAjBA,iBAAiB;EAAAM;EAAAC,iCAFjB,CAACV,eAAe,EAAEC,cAAc,CAAC;EAAAU;EAAAC;EAAAC;EAAAC;IAAA;MAT1CZ,0BAAI;MAAAA,oCAAoB;MAAAA,iBAAK;MAC7BA,yBAAG;MAAIA,gEAAgD;MAAAA,iBAAK;MAC5DA,gCAA0B;MAAAA,wBAAQ;MAAAA,iBAAQ;MAC1CA,mCAA6D;MAAbA;QAAA,OAAU,CAAC;MAAA,EAAC;MAA5DA,iBAA6D;MAC7DA,kEAGM;;;;MAHAA,eAAqB;MAArBA,gCAAqB","names":["SalesTaxService","TaxRateService","i0","SalesTaxComponent","constructor","salesTaxService","getTax","value","getVAT","selectors","features","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/connorgreen/Documents/gitwork/ang-test/src/app/sales-tax.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\n\nimport { SalesTaxService } from './sales-tax.service';\nimport { TaxRateService } from './tax-rate.service';\n\n@Component({\n  selector:    'app-sales-tax',\n  template: `\n    <h2>Sales Tax Calculator</h2>\n    <p><em>Enter a number and press enter to calculate tax.</em></p>\n    <label for=\"amount-input\">Amount: </label>\n    <input type=\"text\" id=\"amount-input\" #amountBox (change)=\"0\">\n    <div *ngIf=\"amountBox.value\">\n    <p>The sales tax is\n     {{ getTax(amountBox.value) | currency:'USD':true:'1.2-2' }}</p>\n    </div>\n  `,\n  providers: [SalesTaxService, TaxRateService]\n})\nexport class SalesTaxComponent {\n  constructor(private salesTaxService: SalesTaxService) { }\n\n  getTax(value: string | number) {\n    return this.salesTaxService.getVAT(value);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}