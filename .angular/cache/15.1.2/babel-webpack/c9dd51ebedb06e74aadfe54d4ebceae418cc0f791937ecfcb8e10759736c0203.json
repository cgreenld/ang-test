{"ast":null,"code":"import { Hero } from './hero';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./backend.service\";\nimport * as i2 from \"./logger.service\";\nimport * as i3 from \"./darkly.service\";\nexport class HeroService {\n  constructor(backend, logger, darkly) {\n    this.backend = backend;\n    this.logger = logger;\n    this.darkly = darkly;\n    this.heroes = [];\n    this.emptyHeroes = [];\n  }\n  getHeroes() {\n    if (this.darkly.ldClient.variation(\"beta_users\", false)) {\n      this.logger.log(`Fetched flag ${this.darkly.ldClient.variation(\"beta_users\", false)}`);\n      return this.emptyHeroes;\n    } else {\n      this.backend.getAll(Hero).then(heroes => {\n        this.logger.log(`Fetched ${heroes.length} heroes.`);\n        this.heroes.push(...heroes); // fill cache\n      });\n\n      return this.heroes;\n    }\n  }\n}\nHeroService.ɵfac = function HeroService_Factory(t) {\n  return new (t || HeroService)(i0.ɵɵinject(i1.BackendService), i0.ɵɵinject(i2.Logger), i0.ɵɵinject(i3.DarklyService));\n};\nHeroService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: HeroService,\n  factory: HeroService.ɵfac\n});","map":{"version":3,"mappings":"AAEA,SAASA,IAAI,QAAQ,QAAQ;;;;;AAM7B,OAAM,MAAOC,WAAW;EAItBC,YACUC,OAAuB,EACvBC,MAAc,EACdC,MAAqB;IAFrB,YAAO,GAAPF,OAAO;IACP,WAAM,GAANC,MAAM;IACN,WAAM,GAANC,MAAM;IANR,WAAM,GAAW,EAAE;IACnB,gBAAW,GAAW,EAAE;EAKG;EAEnCC,SAAS;IACP,IAAI,IAAI,CAACD,MAAM,CAACE,QAAQ,CAACC,SAAS,CAAC,YAAY,EAAC,KAAK,CAAC,EAAE;MACtD,IAAI,CAACJ,MAAM,CAACK,GAAG,CAAC,gBAAgB,IAAI,CAACJ,MAAM,CAACE,QAAQ,CAACC,SAAS,CAAC,YAAY,EAAC,KAAK,CAAC,EAAE,CAAC;MACrF,OAAO,IAAI,CAACE,WAAW;KACxB,MAAM;MACL,IAAI,CAACP,OAAO,CAACQ,MAAM,CAACX,IAAI,CAAC,CAACY,IAAI,CAAGC,MAAc,IAAI;QACjD,IAAI,CAACT,MAAM,CAACK,GAAG,CAAC,WAAWI,MAAM,CAACC,MAAM,UAAU,CAAC;QACnD,IAAI,CAACD,MAAM,CAACE,IAAI,CAAC,GAAGF,MAAM,CAAC,CAAC,CAAC;MAC/B,CAAC,CAAC;;MACF,OAAO,IAAI,CAACA,MAAM;;EAEtB;;AApBWZ,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAe,SAAXf,WAAW;AAAA","names":["Hero","HeroService","constructor","backend","logger","darkly","getHeroes","ldClient","variation","log","emptyHeroes","getAll","then","heroes","length","push","factory"],"sourceRoot":"","sources":["/Users/connorgreen/Documents/gitwork/ang-test/src/app/hero.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\nimport { Hero } from './hero';\nimport { BackendService } from './backend.service';\nimport { Logger } from './logger.service';\nimport { DarklyService } from './darkly.service';\n\n@Injectable()\nexport class HeroService {\n  private heroes: Hero[] = [];\n  private emptyHeroes: Hero[] = [];\n\n  constructor(\n    private backend: BackendService,\n    private logger: Logger,\n    private darkly: DarklyService) { }\n\n  getHeroes() {\n    if (this.darkly.ldClient.variation(\"beta_users\",false)) {\n      this.logger.log(`Fetched flag ${this.darkly.ldClient.variation(\"beta_users\",false)}`);\n      return this.emptyHeroes;\n    } else {\n      this.backend.getAll(Hero).then( (heroes: Hero[]) => {\n        this.logger.log(`Fetched ${heroes.length} heroes.`);\n        this.heroes.push(...heroes); // fill cache\n      });\n      return this.heroes;\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}