{"ast":null,"code":"import { Subject } from 'rxjs';\nimport { initialize } from 'launchdarkly-js-client-sdk';\nimport * as i0 from \"@angular/core\";\n// set up a user to pass \nexport class DarklyService {\n  constructor() {\n    this.flagChange = new Subject();\n    this.flags = {\n      'toh-modify': false,\n      'toh-search': false\n    };\n    // edit here to add the key\n    this.ldClient = initialize(\"61faede4102b18146a95fddc\", {\n      key: \"connortest\",\n      anonymous: false\n    });\n    this.ldClient.on('change', flags => {\n      if (flags['toh-modify'] !== undefined) {\n        this.flags['toh-modify'] = flags['toh-modify'];\n      }\n      if (flags['toh-search'] !== undefined) {\n        this.flags['toh-search'] = flags['toh-search'];\n      }\n      this.flagChange.next(this.flags);\n      console.log(\"Flags updated.\");\n    });\n    this.ldClient.on('ready', () => {\n      this.setFlags();\n    });\n  }\n  changeUser(user) {\n    if (user !== \"Anonymous\") {\n      this.ldClient.identify({\n        key: user,\n        name: user,\n        anonymous: false\n      });\n    } else {\n      this.ldClient.identify({\n        key: 'anon',\n        anonymous: true\n      });\n    }\n  }\n  setFlags() {\n    this.flags = this.ldClient.allFlags();\n    console.log(\"Flags initialized.\");\n  }\n}\nDarklyService.ɵfac = function DarklyService_Factory(t) {\n  return new (t || DarklyService)();\n};\nDarklyService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: DarklyService,\n  factory: DarklyService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAASA,OAAO,QAAQ,MAAM;AAC9B,SAASC,UAAU,QAA6B,4BAA4B;;AAE5E;AAKA,OAAM,MAAOC,aAAa;EAKxBC;IAFA,eAAU,GAAmB,IAAIH,OAAO,EAAU;IAGhD,IAAI,CAACI,KAAK,GAAG;MAAC,YAAY,EAAE,KAAK;MAAE,YAAY,EAAE;IAAK,CAAC;IAEvD;IACA,IAAI,CAACC,QAAQ,GAAGJ,UAAU,CAAC,0BAA0B,EACnD;MAAEK,GAAG,EAAE,YAAY;MACjBC,SAAS,EAAE;KACZ,CACF;IAED,IAAI,CAACF,QAAQ,CAACG,EAAE,CAAC,QAAQ,EAAGJ,KAAK,IAAI;MACnC,IAAGA,KAAK,CAAC,YAAY,CAAC,KAAKK,SAAS,EAAE;QACpC,IAAI,CAACL,KAAK,CAAC,YAAY,CAAC,GAAGA,KAAK,CAAC,YAAY,CAAC;;MAEhD,IAAGA,KAAK,CAAC,YAAY,CAAC,KAAKK,SAAS,EAAE;QACpC,IAAI,CAACL,KAAK,CAAC,YAAY,CAAC,GAAGA,KAAK,CAAC,YAAY,CAAC;;MAEhD,IAAI,CAACM,UAAU,CAACC,IAAI,CAAC,IAAI,CAACP,KAAK,CAAC;MAChCQ,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;IAChC,CAAC,CAAC;IAEF,IAAI,CAACR,QAAQ,CAACG,EAAE,CAAC,OAAO,EAAE,MAAK;MAC7B,IAAI,CAACM,QAAQ,EAAE;IACjB,CAAC,CAAC;EACH;EAEAC,UAAU,CAACC,IAAY;IACrB,IAAGA,IAAI,KAAK,WAAW,EAAE;MACvB,IAAI,CAACX,QAAQ,CAACY,QAAQ,CAAC;QAACX,GAAG,EAAEU,IAAI;QAAEE,IAAI,EAAEF,IAAI;QAAET,SAAS,EAAE;MAAK,CAAC,CAAC;KAClE,MACI;MACH,IAAI,CAACF,QAAQ,CAACY,QAAQ,CAAC;QAACX,GAAG,EAAE,MAAM;QAAEC,SAAS,EAAE;MAAI,CAAC,CAAC;;EAE1D;EACAO,QAAQ;IACN,IAAI,CAACV,KAAK,GAAG,IAAI,CAACC,QAAQ,CAACc,QAAQ,EAAE;IACrCP,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;EACnC;;AA1CWX,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;SAAbA,aAAa;EAAAkB,SAAblB,aAAa;EAAAmB,YAFZ;AAAM","names":["Subject","initialize","DarklyService","constructor","flags","ldClient","key","anonymous","on","undefined","flagChange","next","console","log","setFlags","changeUser","user","identify","name","allFlags","factory","providedIn"],"sourceRoot":"","sources":["/Users/connorgreen/Documents/gitwork/ang-test/src/app/darkly.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { initialize, LDClient, LDFlagSet } from 'launchdarkly-js-client-sdk';\n\n// set up a user to pass \n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DarklyService {\n  ldClient: LDClient;\n  flags: LDFlagSet;\n  flagChange:Subject<Object> = new Subject<Object>();\n\n  constructor() {\n    this.flags = {'toh-modify': false, 'toh-search': false};\n\n    // edit here to add the key\n    this.ldClient = initialize(\"61faede4102b18146a95fddc\",\n      { key: \"connortest\", \n        anonymous: false \n      }\n    );\n\n    this.ldClient.on('change', (flags) => {\n      if(flags['toh-modify'] !== undefined) {\n        this.flags['toh-modify'] = flags['toh-modify'];\n      }\n      if(flags['toh-search'] !== undefined) {\n        this.flags['toh-search'] = flags['toh-search'];\n      }\n      this.flagChange.next(this.flags);\n      console.log(\"Flags updated.\")\n   });\n\n   this.ldClient.on('ready', () => {\n     this.setFlags();\n   })\n  }\n\n  changeUser(user: string) {\n    if(user !== \"Anonymous\") {\n      this.ldClient.identify({key: user, name: user, anonymous: false});\n    }\n    else {\n      this.ldClient.identify({key: 'anon', anonymous: true});\n    }\n  }\n  setFlags() {\n    this.flags = this.ldClient.allFlags();\n    console.log(\"Flags initialized.\");\n  }\n}\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}