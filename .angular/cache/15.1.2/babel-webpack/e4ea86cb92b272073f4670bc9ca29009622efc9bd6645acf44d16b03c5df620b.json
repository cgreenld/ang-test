{"ast":null,"code":"import { Subject } from 'rxjs';\nimport { initialize } from 'launchdarkly-js-client-sdk';\nimport * as i0 from \"@angular/core\";\n// set up a user to pass \nexport class DarklyService {\n  constructor() {\n    this.flagChange = new Subject();\n    this.flags = {\n      'toh-modify': false,\n      'toh-search': false\n    };\n    // edit here to add the key\n    this.ldClient = initialize(\"61faede4102b18146a95fddc\", {\n      key: \"connortest\",\n      anonymous: false\n    });\n    this.ldClient.on('change', flags => {\n      if (flags['toh-modify'] !== undefined) {\n        this.flags['toh-modify'] = flags['toh-modify'];\n      }\n      if (flags['toh-search'] !== undefined) {\n        this.flags['toh-search'] = flags['toh-search'];\n      }\n      this.flagChange.next(this.flags);\n      console.log(\"Flags updated.\");\n    });\n    this.ldClient.on('ready', () => {\n      this.setFlags();\n    });\n  }\n  changeUser(user) {\n    if (user !== \"Anonymous\") {\n      this.ldClient.identify({\n        key: user,\n        name: user,\n        anonymous: false\n      });\n    } else {\n      this.ldClient.identify({\n        key: 'anon',\n        anonymous: true\n      });\n    }\n  }\n  setFlags() {\n    this.flags = this.ldClient.allFlags();\n    console.log(\"Flags initialized.\");\n  }\n}\nDarklyService.ɵfac = function DarklyService_Factory(t) {\n  return new (t || DarklyService)();\n};\nDarklyService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: DarklyService,\n  factory: DarklyService.ɵfac,\n  providedIn: 'root'\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}